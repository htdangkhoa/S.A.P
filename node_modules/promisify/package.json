{
  "_args": [
    [
      {
        "raw": "promisify@0.0.3",
        "scope": null,
        "escapedName": "promisify",
        "name": "promisify",
        "rawSpec": "0.0.3",
        "spec": "0.0.3",
        "type": "version"
      },
      "/home/dangkhoa/Desktop/S.A.P/node_modules/mp3-duration"
    ]
  ],
  "_from": "promisify@0.0.3",
  "_id": "promisify@0.0.3",
  "_inCache": true,
  "_location": "/promisify",
  "_npmUser": {
    "name": "dwragg",
    "email": "david@wragg.org"
  },
  "_npmVersion": "1.1.61",
  "_phantomChildren": {},
  "_requested": {
    "raw": "promisify@0.0.3",
    "scope": null,
    "escapedName": "promisify",
    "name": "promisify",
    "rawSpec": "0.0.3",
    "spec": "0.0.3",
    "type": "version"
  },
  "_requiredBy": [
    "/mp3-duration"
  ],
  "_resolved": "https://registry.npmjs.org/promisify/-/promisify-0.0.3.tgz",
  "_shasum": "754db61f29ee6476ab543c45b464d21f5ef55686",
  "_shrinkwrap": null,
  "_spec": "promisify@0.0.3",
  "_where": "/home/dangkhoa/Desktop/S.A.P/node_modules/mp3-duration",
  "author": {
    "name": "David Wragg",
    "email": "david@wragg.org",
    "url": "http://david.wragg.org"
  },
  "bugs": {
    "url": "https://github.com/dpw/promisify/issues"
  },
  "dependencies": {
    "when": ""
  },
  "description": "Convert callback-based APIs to promises",
  "devDependencies": {
    "nodeunit": ""
  },
  "directories": {},
  "dist": {
    "shasum": "754db61f29ee6476ab543c45b464d21f5ef55686",
    "tarball": "https://registry.npmjs.org/promisify/-/promisify-0.0.3.tgz"
  },
  "homepage": "https://github.com/dpw/promisify#readme",
  "main": "promisify.js",
  "maintainers": [
    {
      "name": "dwragg",
      "email": "david@wragg.org"
    }
  ],
  "name": "promisify",
  "optionalDependencies": {},
  "readme": "# Promisify: Convert callback-based APIs to promises\n\nPromises are a popular solution to some of the drawbacks of the\ncallback-style async APIs dominant in node.js libraries.  But it's\nawkward to write an node.js application using promises when all the\nlibraries you want to use are callback-based.\n\nHence Promisify.  It converts callback-style APIs to use promises\ninstead.  To use it, you provide a concise description of the\nstructure of the API to tell Promisify what to convert.  For example,\nhere is a sample which converts a substantial portion of the MongoDB\ndriver API to Promises:\n\n    var promisify = require('promisify');\n\n    var promisify_collection = promisify.object({\n        insert: promisify.cb_func(),\n        remove: promisify.cb_func(),\n        findOne: promisify.cb_func(),\n        find: promisify.func(promisify.object({\n            stream: promisify.func(promisify.read_stream())\n        }))\n    });\n\n    var promisify_connection = promisify.object({\n        collection: promisify.cb_func(promisify_collection),\n        createCollection: promisify.cb_func(promisify_collection),\n        dropCollection: promisify.cb_func()\n    });\n\n    var promisify_mongodb = promisify.object({\n        connect: promisify.cb_func(promisify_connection)\n    });\n\n    var mongodb = promisify_mongodb(require('mongodb'));\n\nPromisify is built upon the [when.js](https://github.com/cujojs/when)\nimplementation of promises.\n",
  "repository": {
    "type": "git",
    "url": "git://github.com/dpw/promisify.git"
  },
  "scripts": {
    "test": "node ./node_modules/nodeunit/bin/nodeunit test"
  },
  "version": "0.0.3"
}
