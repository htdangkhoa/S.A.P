{"version":3,"file":"id3v2_frames.js","sourceRoot":"","sources":["../../src/id3v2_frames.ts"],"names":[],"mappings":"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","sourcesContent":["import * as strtok from 'strtok2';\r\nimport common from './common';\r\nimport vorbis from './vorbis';\r\n\r\ninterface IOut {\r\n  language?: string,\r\n  description?: string,\r\n  text?: string,\r\n}\r\n\r\ninterface IPicture {\r\n  type?: string,\r\n  description?: string;\r\n  format?: string,\r\n  data?: Uint8Array;\r\n}\r\n\r\n/**\r\n * Used for the 'Musician credits list' (TMCL) result.\r\n * Mapping between instruments and the musician that played it\r\n */\r\ninterface IMusicianCredit {\r\n  instrument: string,\r\n  name: string;\r\n}\r\n\r\n/**\r\n * Used for the 'Musician credits list' (TMCL) result.\r\n * Mapping between instruments and the musician that played it\r\n */\r\ninterface IInvolvedPerson {\r\n  'function': string,\r\n  name: string;\r\n}\r\n\r\nexport default class FrameParser {\r\n\r\n  public static readData(b: Buffer, type: string, flags, major: number) {\r\n    let encoding = FrameParser.getTextEncoding(b[0]);\r\n    let length = b.length;\r\n    let offset = 0;\r\n    let output: any = []; // ToDo\r\n    let nullTerminatorLength = FrameParser.getNullTerminatorLength(encoding);\r\n    let fzero: number;\r\n    let out: IOut = {};\r\n\r\n    switch (type !== 'TXXX' && type[0] === 'T' ? 'T*' : type) {\r\n      case 'T*': // 4.2.1. Text information frames - details\r\n      case 'IPLS': // v2.3: Involved people list\r\n        let text = common.decodeString(b.slice(1), encoding).replace(/\\x00+$/, '');\r\n        // id3v2.4 defines that multiple T* values are separated by 0x00\r\n        // id3v2.3 defines that multiple T* values are separated by /\r\n        switch (type) {\r\n          case 'TMCL': // Musician credits list\r\n          case 'TIPL': // Involved people list\r\n          case 'IPLS': // Involved people list\r\n            output = FrameParser.splitValue(4, text);\r\n            output = FrameParser.functionList(output);\r\n            break;\r\n          case 'TRK':\r\n          case 'TRCK':\r\n          case 'TPOS':\r\n            output = text;\r\n            break;\r\n          default:\r\n            output = FrameParser.splitValue(major, text);\r\n        }\r\n        break;\r\n\r\n      case 'TXXX':\r\n        output = FrameParser.readIdentifierAndData(b, offset + 1, length, encoding);\r\n        output = {\r\n          description: output.id,\r\n          text: FrameParser.splitValue(major, common.decodeString(output.data, encoding).replace(/\\x00+$/, ''))\r\n        };\r\n        break;\r\n\r\n      case 'PIC':\r\n      case 'APIC':\r\n        let pic: IPicture = {};\r\n\r\n        offset += 1;\r\n\r\n        switch (major) {\r\n          case 2:\r\n            pic.format = common.decodeString(b.slice(offset, offset + 3), encoding);\r\n            offset += 3;\r\n            break;\r\n          case 3:\r\n          case 4:\r\n            let enc = 'iso-8859-1';\r\n            fzero = common.findZero(b, offset, length, enc);\r\n            pic.format = common.decodeString(b.slice(offset, fzero), enc);\r\n            offset = fzero + 1;\r\n            break;\r\n\r\n          default:\r\n            throw new Error('Warning: unexpected major versionIndex: ' + major);\r\n        }\r\n\r\n        pic.type = vorbis.getPictureType(b[offset]);\r\n        offset += 1;\r\n\r\n        fzero = common.findZero(b, offset, length, encoding);\r\n        pic.description = common.decodeString(b.slice(offset, fzero), encoding);\r\n        offset = fzero + nullTerminatorLength;\r\n\r\n        pic.data = new Buffer(b.slice(offset, length));\r\n        output = pic;\r\n        break;\r\n\r\n      case 'CNT':\r\n      case 'PCNT':\r\n        output = strtok.UINT32_BE.get(b, 0);\r\n        break;\r\n\r\n      case 'SYLT':\r\n        // skip text encoding (1 byte),\r\n        //      language (3 bytes),\r\n        //      time stamp format (1 byte),\r\n        //      content headerType (1 byte),\r\n        //      content descriptor (1 byte)\r\n        offset += 7;\r\n\r\n        output = [];\r\n        while (offset < length) {\r\n          let txt = b.slice(offset, offset = common.findZero(b, offset, length, encoding));\r\n          offset += 5; // push offset forward one +  4 byte timestamp\r\n          output.push(common.decodeString(txt, encoding));\r\n        }\r\n        break;\r\n\r\n      case 'ULT':\r\n      case 'USLT':\r\n      case 'COM':\r\n      case 'COMM':\r\n\r\n        offset += 1;\r\n\r\n        out.language = common.decodeString(b.slice(offset, offset + 3), 'iso-8859-1');\r\n        offset += 3;\r\n\r\n        fzero = common.findZero(b, offset, length, encoding);\r\n        out.description = common.decodeString(b.slice(offset, fzero), encoding);\r\n        offset = fzero + nullTerminatorLength;\r\n\r\n        out.text = common.decodeString(b.slice(offset, length), encoding).replace(/\\x00+$/, '');\r\n\r\n        output = [out];\r\n        break;\r\n\r\n      case 'UFID':\r\n        output = FrameParser.readIdentifierAndData(b, offset, length, 'iso-8859-1');\r\n        output = {owner_identifier: output.id, identifier: output.data};\r\n\r\n        break;\r\n\r\n      case 'PRIV': // private frame\r\n        output = FrameParser.readIdentifierAndData(b, offset, length, 'iso-8859-1');\r\n        output = {owner_identifier: output.id, data: output.data};\r\n        break;\r\n\r\n      default:\r\n        // ToDO? console.log('Warning: unsupported id3v2-tag-type: ' + type)\r\n        break;\r\n    }\r\n\r\n    return output;\r\n  }\r\n\r\n  /**\r\n   * Converts TMCL (Musician credits list) or TIPL (Involved people list)\r\n   * @param entries\r\n   */\r\n  private static functionList(entries: string[]): {[index: string]: string[] } {\r\n    let res: {[index: string]: string[] } = {};\r\n    for (let i = 0; i < entries.length; i += 2) {\r\n      let names: string[] = entries[i + 1].split(',');\r\n      res[entries[i]] = res.hasOwnProperty(entries[i]) ? res[entries[i]].concat(names) : names;\r\n    }\r\n    return res;\r\n  }\r\n\r\n  private static splitValue(major: number, text: string) {\r\n    let values = text.split(major >= 4 ? /\\x00/g : /\\//g);\r\n    return FrameParser.trimArray(values);\r\n  }\r\n\r\n  private static trimArray(values: string[]): string[] {\r\n    for (let i = 0; i < values.length; ++i) {\r\n      values[i] = values[i].replace(/\\x00+$/, '').trim();\r\n    }\r\n    return values;\r\n  }\r\n\r\n  private static readIdentifierAndData(b, offset, length, encoding): {id: string, data: Uint8Array} {\r\n    let fzero = common.findZero(b, offset, length, encoding);\r\n\r\n    let id = common.decodeString(b.slice(offset, fzero), encoding);\r\n    offset = fzero + FrameParser.getNullTerminatorLength(encoding);\r\n\r\n    return {id, data: b.slice(offset, length)};\r\n  }\r\n\r\n  private static getTextEncoding(byte): string {\r\n    switch (byte) {\r\n      case 0x00:\r\n        return 'iso-8859-1'; // binary\r\n      case 0x01:\r\n      case 0x02:\r\n        return 'utf16'; // 01 = with bom, 02 = without bom\r\n      case 0x03:\r\n        return 'utf8';\r\n      default:\r\n        return 'utf8';\r\n    }\r\n  }\r\n\r\n  private static getNullTerminatorLength(enc) {\r\n    switch (enc) {\r\n      case 'utf16':\r\n        return 2;\r\n      default:\r\n        return 1;\r\n    }\r\n  }\r\n\r\n}\r\n\r\n// exports.readData = function readData (b, type, flags, major) {\r\n"]}