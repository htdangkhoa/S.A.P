'use strict';
/*jslint browser: true*/
var through = require('through');
var musicMetadata = require('./index');
var readStream = require('filereader-stream');
var isStream = require('is-stream');
module.exports = function (stream, opts, callback) {
    return musicMetadata.parseStream(wrapFileWithStream(stream), opts, callback);
};
function wrapFileWithStream(file) {
    var _this = this;
    var stream = through(function (data) {
        if (data.length > 0)
            _this.queue(data);
    }, null, { autoDestroy: false });
    if (file instanceof ArrayBuffer) {
        return wrapArrayBufferWithStream(file, stream);
    }
    stream.fileSize = function (cb) {
        process.nextTick(function () {
            cb(file.size);
        });
    };
    if (isStream(file)) {
        return file.pipe(stream);
    }
    if (file instanceof FileList) {
        throw new Error('You have passed a FileList object but we expected a File');
    }
    if (!(file instanceof File || file instanceof Blob)) {
        throw new Error('You must provide a valid File or Blob object');
    }
    return readStream(file).pipe(stream);
}
function wrapArrayBufferWithStream(arrayBuffer, throughStream) {
    throughStream.fileSize = function (cb) {
        process.nextTick(function () {
            cb(arrayBuffer.byteLength);
        });
    };
    process.nextTick(function () {
        throughStream.write(new Buffer(new Uint8Array(arrayBuffer)));
        throughStream.end();
    });
    return throughStream;
}
//# sourceMappingURL=browser.js.map