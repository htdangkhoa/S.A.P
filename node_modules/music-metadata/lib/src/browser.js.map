{"version":3,"file":"browser.js","sourceRoot":"","sources":["../../src/browser.ts"],"names":[],"mappings":"AAAA,YAAY,CAAC;AAEb,wBAAwB;AACxB,IAAY,OAAO,WAAM,SAAS,CAAC,CAAA;AACnC,IAAY,aAAa,WAAM,SAAS,CAAC,CAAA;AAEzC,IAAO,UAAU,WAAW,mBAAmB,CAAC,CAAC;AACjD,IAAO,QAAQ,WAAW,WAAW,CAAC,CAAC;AAKvC,MAAM,CAAC,OAAO,GAAG,UAAC,MAAM,EAAE,IAAI,EAAE,QAAQ;IACtC,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,kBAAkB,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;AAC/E,CAAC,CAAC;AAMF,4BAA6B,IAAoD;IAAjF,iBA0BC;IAzBC,IAAI,MAAM,GAAwB,OAAO,CAAE,UAAC,IAAI;QAC9C,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YAAC,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC,EAAE,IAAI,EAAE,EAAC,WAAW,EAAE,KAAK,EAAC,CAAC,CAAC;IAE/B,EAAE,CAAC,CAAC,IAAI,YAAY,WAAW,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,yBAAyB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IACjD,CAAC;IAED,MAAM,CAAC,QAAQ,GAAG,UAAC,EAAE;QACnB,OAAO,CAAC,QAAQ,CAAE;YAChB,EAAE,CAAS,IAAK,CAAC,IAAI,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;IAEF,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACnB,MAAM,CAAmB,IAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC9C,CAAC;IACD,EAAE,CAAC,CAAC,IAAI,YAAY,QAAQ,CAAC,CAAC,CAAC;QAC7B,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;IAC9E,CAAC;IACD,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,YAAY,IAAI,IAAI,IAAI,YAAY,IAAI,CAAC,CAAC,CAAC,CAAC;QACpD,MAAM,IAAI,KAAK,CAAC,8CAA8C,CAAC,CAAC;IAClE,CAAC;IAED,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACvC,CAAC;AAED,mCAAoC,WAAwB,EAAE,aAA4B;IAClE,aAAc,CAAC,QAAQ,GAAG,UAAC,EAAE;QACjD,OAAO,CAAC,QAAQ,CAAE;YAChB,EAAE,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;IAEF,OAAO,CAAC,QAAQ,CAAE;QAChB,aAAa,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,IAAI,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QAC7D,aAAa,CAAC,GAAG,EAAE,CAAC;IACtB,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,aAAa,CAAC;AACvB,CAAC","sourcesContent":["'use strict';\r\n\r\n/*jslint browser: true*/\r\nimport * as through from 'through';\r\nimport * as musicMetadata from './index';\r\n\r\nimport readStream = require('filereader-stream');\r\nimport isStream = require('is-stream');\r\n\r\nimport {ThroughStream} from 'through';\r\nimport ReadableStream = NodeJS.ReadableStream;\r\n\r\nmodule.exports = (stream, opts, callback) => {\r\n  return musicMetadata.parseStream(wrapFileWithStream(stream), opts, callback);\r\n};\r\n\r\ninterface IFileWrapperStream extends ThroughStream {\r\n  fileSize: (cb: (fileSize: number) => void) => void\r\n}\r\n\r\nfunction wrapFileWithStream (file: ArrayBuffer | Blob | FileList | ReadableStream): ReadableStream {\r\n  let stream = <IFileWrapperStream> through( (data) => {\r\n    if (data.length > 0) this.queue(data);\r\n  }, null, {autoDestroy: false});\r\n\r\n  if (file instanceof ArrayBuffer) {\r\n    return wrapArrayBufferWithStream(file, stream);\r\n  }\r\n\r\n  stream.fileSize = (cb) => {\r\n    process.nextTick( () => {\r\n      cb((<Blob> file).size);\r\n    });\r\n  };\r\n\r\n  if (isStream(file)) {\r\n    return (<ReadableStream> file).pipe(stream);\r\n  }\r\n  if (file instanceof FileList) {\r\n    throw new Error('You have passed a FileList object but we expected a File');\r\n  }\r\n  if (!(file instanceof File || file instanceof Blob)) {\r\n    throw new Error('You must provide a valid File or Blob object');\r\n  }\r\n\r\n  return readStream(file).pipe(stream);\r\n}\r\n\r\nfunction wrapArrayBufferWithStream (arrayBuffer: ArrayBuffer, throughStream: ThroughStream) {\r\n  (<IFileWrapperStream> throughStream).fileSize = (cb) => {\r\n    process.nextTick( () => {\r\n      cb(arrayBuffer.byteLength);\r\n    });\r\n  };\r\n\r\n  process.nextTick( () => {\r\n    throughStream.write(new Buffer(new Uint8Array(arrayBuffer)));\r\n    throughStream.end();\r\n  });\r\n\r\n  return throughStream;\r\n}\r\n"]}