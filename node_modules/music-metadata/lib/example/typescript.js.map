{"version":3,"file":"typescript.js","sourceRoot":"","sources":["../../example/typescript.ts"],"names":[],"mappings":";AAAA,IAAY,EAAE,WAAM,IAAI,CAAC,CAAA;AACzB,IAAY,EAAE,WAAM,IAAI,CAAC,CAAA;AACzB,IAAY,IAAI,WAAM,MAAM,CAAC,CAAA;AAE7B,IAAI,WAAW,GAAG,EAAE,CAAC,gBAAgB,CAAC,0DAA0D,CAAC,CAAC;AAElG,4DAA4D;AAC5D,EAAE,CAAC,WAAW,CAAC,WAAW,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC,EAAE,UAAC,GAAG,EAAE,QAAQ;IACxD,oGAAoG;IACpG,WAAW,CAAC,KAAK,EAAE,CAAC;IACpB,EAAE,CAAC,CAAC,GAAG,CAAC;QAAC,MAAM,GAAG,CAAC;IAEnB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAC,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAC,CAAC,CAAC,CAAC;AACxE,CAAC,CAAC,CAAC","sourcesContent":["import * as fs from 'fs';\r\nimport * as mm from '..';\r\nimport * as util from 'util';\r\n\r\nlet audioStream = fs.createReadStream('../test/samples/MusicBrainz-multiartist [id3v2.4].V2.mp3');\r\n\r\n// create a new music-metadata parser from a node ReadStream\r\nmm.parseStream(audioStream, {native: true}, (err, metadata) => {\r\n  // important note, the stream is not closed by default. To prevent leaks, you must close it yourself\r\n  audioStream.close();\r\n  if (err) throw err;\r\n\r\n  console.log(util.inspect(metadata, {showHidden: false, depth: null}));\r\n});\r\n"]}