{"version":3,"file":"asf.js","sourceRoot":"","sources":["../src/asf.ts"],"names":[],"mappings":"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","sourcesContent":["'use strict';\nimport * as equal from 'deep-equal';\nimport * as strtok from 'strtok2';\nimport {Token} from 'strtok2';\nimport common from './common';\nimport {IStreamParser, TagCallback} from './parser';\nimport ReadableStream = NodeJS.ReadableStream;\n\ninterface IState {\n\n  parse(callback, data, done): IState;\n\n  getExpectedType(): Token;\n}\n\nabstract class State implements IState {\n\n  protected nextState: IState;\n  protected size: number;\n\n  constructor(nextState: IState, size: number) {\n    this.nextState = nextState;\n    this.size = size;\n  }\n\n  public abstract parse(callback, data, done)\n\n  public abstract getExpectedType()\n}\n\nclass AsfParser implements IStreamParser {\n\n  public static headerType = 'asf';\n\n  public static startState: IState =\n  {\n    parse: () => {\n      return AsfParser.idState;\n    },\n\n    getExpectedType: () => {\n      return strtok.DONE; // unreachable statement\n    }\n  };\n\n  public static finishedState: IState =\n  {\n    parse: () => {\n      return AsfParser.finishedState;\n    },\n\n    getExpectedType: () => {\n      return strtok.DONE;\n    }\n  };\n\n  public static idState: IState =\n  {\n    parse: (callback, data, done) => {\n      if (!equal(common.asfGuidBuf, data)) {\n        done(new Error('expected asf header but was not found'));\n        return AsfParser.finishedState;\n      }\n      return new HeaderDataState();\n    },\n\n    getExpectedType: () => {\n      return new strtok.BufferType(common.asfGuidBuf.length);\n    }\n  };\n\n  public static getInstance(): AsfParser {\n    return new AsfParser();\n  }\n\n  public parse(stream, callback, done) {\n\n    let currentState: IState = AsfParser.startState;\n\n    strtok.parse(stream, (v, cb) => {\n      currentState = currentState.parse(callback, v, done);\n      return currentState.getExpectedType();\n    });\n  }\n}\n\ntype AttributeParser = (buf: Buffer) => boolean | string | number | Buffer;\n\nclass Util {\n\n  public static getParserForAttr(i: number): AttributeParser {\n    return Util.attributeParsers[i];\n  }\n\n  public static parseUnicodeAttr(buf): string {\n    return common.stripNulls(common.decodeString(buf, 'utf16le'));\n  }\n\n  public static parseByteArrayAttr(buf: Buffer): Buffer {\n    const newBuf = new Buffer(buf.length);\n    buf.copy(newBuf);\n    return newBuf;\n  }\n\n  public static parseBoolAttr(buf: Buffer): boolean {\n    return Util.parseDWordAttr(buf) === 1;\n  }\n\n  public static parseDWordAttr(buf: Buffer): number {\n    return buf.readUInt32LE(0);\n  }\n\n  public static parseQWordAttr(buf: Buffer): number {\n    return Util.readUInt64LE(buf, 0);\n  }\n\n  public static parseWordAttr(buf: Buffer): number {\n    return buf.readUInt16LE(0);\n  }\n\n  public static readUInt64LE(buffer, offset): number {\n    const high = buffer.slice(offset, offset + 4).readUInt32LE(0);\n    const low = buffer.slice(offset + 4, offset + 8).readUInt32LE(0);\n    const maxuint32 = Math.pow(2, 32);\n    return ((low * maxuint32) + (high >>> 0));\n  }\n\n  private static attributeParsers: AttributeParser[] = [\n    Util.parseUnicodeAttr,\n    Util.parseByteArrayAttr,\n    Util.parseBoolAttr,\n    Util.parseDWordAttr,\n    Util.parseQWordAttr,\n    Util.parseWordAttr,\n    Util.parseByteArrayAttr\n  ];\n}\n\ninterface IGuidState {\n  guid: Buffer;\n\n  getState(nextState: IState, size: number): IState;\n}\n\nclass ReadObjectState implements IState {\n\n  public static stateByGuid(guidBuf) {\n    for (const guidState of ReadObjectState.guidStates) {\n      if (equal(guidState.guid, guidBuf)) {\n        return guidState;\n      }\n    }\n    return null;\n  }\n\n  private static guidStates: IGuidState[] = [\n    {\n      guid: new Buffer([\n        0xA1, 0xDC, 0xAB, 0x8C, 0x47, 0xA9, 0xCF, 0x11,\n        0x8E, 0xE4, 0x00, 0xC0, 0x0C, 0x20, 0x53, 0x65\n      ]),\n\n      getState: (nextState: IState, size: number) => {\n        return new FilePropertiesObject(nextState, size);\n      }\n    },\n    // ContentDescriptionObject\n    {\n      guid: new Buffer([\n        0x33, 0x26, 0xB2, 0x75, 0x8E, 0x66, 0xCF, 0x11,\n        0xA6, 0xD9, 0x00, 0xAA, 0x00, 0x62, 0xCE, 0x6C\n      ]),\n\n      getState: (nextState: IState, size: number) => {\n        return new ContentDescriptionObjectState(nextState, size);\n      }\n    },\n    // ExtendedContentDescriptionObject\n    {\n      guid: new Buffer([\n        0x40, 0xA4, 0xD0, 0xD2, 0x07, 0xE3, 0xD2, 0x11,\n        0x97, 0xF0, 0x00, 0xA0, 0xC9, 0x5E, 0xA8, 0x50\n      ]),\n\n      getState: (nextState: IState, size: number) => {\n        return new ExtendedContentDescriptionObjectState(nextState, size);\n      }\n    }];\n\n  protected size: number;\n  protected objectCount: number;\n\n  constructor(size: number, objectCount: number) {\n    this.size = size;\n    this.objectCount = objectCount;\n  }\n\n  public parse(callback, data, done) {\n    const guid = data.slice(0, 16);\n    const size = Util.readUInt64LE(data, 16);\n    this.objectCount -= 1;\n    this.size -= size;\n    const nextState = (this.objectCount <= 0) ? AsfParser.finishedState : this;\n    const guidState = ReadObjectState.stateByGuid(guid);\n    return guidState ? guidState.getState(nextState, size - 24) : new IgnoreObjectState(nextState, size - 24);\n  }\n\n  public getExpectedType() {\n    return new strtok.BufferType(24);\n  }\n}\n\nclass HeaderDataState implements IState {\n\n  public parse(callback, data, done) {\n    const size = Util.readUInt64LE(data, 0);\n    const objectCount = data.readUInt32LE(8);\n    return new ReadObjectState(size, objectCount);\n  }\n\n  public getExpectedType() {\n    // 8 bytes size\n    // 4 bytes object count\n    // 2 bytes ignore\n    return new strtok.BufferType(14);\n  }\n}\n\nclass IgnoreObjectState extends State {\n\n  constructor(nextState, size) {\n    super(nextState, size);\n  }\n\n  public parse(callback: TagCallback, data, done) {\n    if (this.nextState === AsfParser.finishedState) {\n      done();\n    }\n    return this.nextState;\n  }\n\n  public getExpectedType() {\n    return new strtok.IgnoreType(this.size);\n  }\n}\n\nclass ContentDescriptionObjectState extends State {\n\n  public static guid = new Buffer([\n    0x33, 0x26, 0xB2, 0x75, 0x8E, 0x66, 0xCF, 0x11,\n    0xA6, 0xD9, 0x00, 0xAA, 0x00, 0x62, 0xCE, 0x6C\n  ]);\n\n  private static contentDescTags = ['Title', 'Author', 'Copyright', 'Description', 'Rating'];\n\n  constructor(nextState: IState, size: number) {\n    super(nextState, size);\n  }\n\n  public parse(callback, data, done) {\n    const lengths = [\n      data.readUInt16LE(0),\n      data.readUInt16LE(2),\n      data.readUInt16LE(4),\n      data.readUInt16LE(6),\n      data.readUInt16LE(8)\n    ];\n    let pos = 10;\n    for (let i = 0; i < ContentDescriptionObjectState.contentDescTags.length; i += 1) {\n      const tagName = ContentDescriptionObjectState.contentDescTags[i];\n      const length = lengths[i];\n      const end = pos + length;\n      if (length > 0) {\n        const value = Util.parseUnicodeAttr(data.slice(pos, end));\n        callback(AsfParser.headerType, tagName, value);\n      }\n      pos = end;\n    }\n    if (this.nextState === AsfParser.finishedState) {\n      done();\n    }\n    return this.nextState;\n  }\n\n  public getExpectedType() {\n    return new strtok.BufferType(this.size);\n  }\n\n}\n\nclass ExtendedContentDescriptionObjectState extends State {\n\n  constructor(nextState: IState, size: number) {\n    super(nextState, size);\n  }\n\n  public parse(callback, data, done) {\n    const attrCount = data.readUInt16LE(0);\n    let pos = 2;\n    for (let i = 0; i < attrCount; i += 1) {\n      const nameLen = data.readUInt16LE(pos);\n      pos += 2;\n      const name = Util.parseUnicodeAttr(data.slice(pos, pos + nameLen));\n      pos += nameLen;\n      const valueType = data.readUInt16LE(pos);\n      pos += 2;\n      const valueLen = data.readUInt16LE(pos);\n      pos += 2;\n      const value = data.slice(pos, pos + valueLen);\n      pos += valueLen;\n      const parseAttr = Util.getParserForAttr(valueType);\n      if (!parseAttr) {\n        done(new Error('unexpected value headerType: ' + valueType));\n        return AsfParser.finishedState;\n      }\n      const attr = parseAttr(value);\n      callback(AsfParser.headerType, name, attr);\n    }\n    if (this.nextState === AsfParser.finishedState) {\n      done();\n    }\n    return this.nextState;\n  }\n\n  public getExpectedType() {\n    return new strtok.BufferType(this.size);\n  }\n}\n\nclass FilePropertiesObject extends State {\n\n  constructor(nextState, size) {\n    super(nextState, size);\n  }\n\n  public parse(callback, data, done) {\n    // in miliseconds\n    const playDuration = Util.parseQWordAttr(data.slice(40, 48)) / 10000;\n    callback('format', 'duration', playDuration / 1000);\n\n    if (this.nextState === AsfParser.finishedState) {\n      done();\n    }\n    return this.nextState;\n  }\n\n  public getExpectedType() {\n    return new strtok.BufferType(this.size);\n  }\n\n}\n\nmodule.exports = AsfParser.getInstance();\n"]}