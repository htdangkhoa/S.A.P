{"version":3,"file":"id3v2.js","sourceRoot":"","sources":["../src/id3v2.ts"],"names":[],"mappings":"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","sourcesContent":["import ReadableStream = NodeJS.ReadableStream;\nimport * as strtok from 'strtok2';\nimport {isArray} from 'util';\nimport common from './common';\nimport id3v2_frames from './id3v2_frames';\nimport {MpegParser} from './mpeg';\nimport {IStreamParser} from './parser';\nimport {HeaderType} from './tagmap';\n\ninterface IFrameFlags {\n  status: {\n    tag_alter_preservation: boolean,\n    file_alter_preservation: boolean,\n    read_only: boolean\n  },\n  format: {\n    grouping_identity: boolean,\n    compression: boolean,\n    encryption: boolean,\n    unsynchronisation: boolean,\n    data_length_indicator: boolean\n  };\n}\ninterface IFrameHeader {\n  id: string,\n  length?: number;\n  flags?: IFrameFlags;\n}\n\n/**\n * ID3v2 tag header\n */\ninterface IID3v2header {\n// ID3v2/file identifier   \"ID3\"\n  fileIdentifier: string,\n  // ID3v2 versionIndex\n  version: {\n    major: number,\n    revision: number\n  },\n  // ID3v2 flags\n  flags: {\n    // Raw flags value\n    raw: number,\n    // Unsynchronisation\n    unsynchronisation: boolean,\n    // Extended header\n    isExtendedHeader: boolean\n    // Experimental indicator\n    expIndicator: boolean,\n    footer: boolean\n  };\n  size: number;\n}\n\ninterface IExtendedHeader {\n  // Extended header size\n  size: number,\n  extendedFlags: number,\n  // Size of padding\n  sizeOfPadding: number,\n  // CRC data present\n  crcDataPresent: boolean;\n}\n\nenum State {\n  header,\n  extendedHeader,\n  extendedHeaderData,\n  id3_data,\n  MP3\n}\n\nclass ID3v2 {\n\n  /**\n   * 28 bits (representing up to 256MB) integer, the msb is 0 to avoid 'false syncsignals'.\n   * 4 * %0xxxxxxx\n   */\n  public static UINT32SYNCSAFE = {\n    get: (buf: Buffer, off: number): number => {\n      return buf[off + 3] & 0x7f | ((buf[off + 2]) << 7) |\n        ((buf[off + 1]) << 14) | ((buf[off]) << 21);\n    },\n    len: 4\n  };\n\n  /**\n   * ID3v2 header\n   * Ref: http://id3.org/id3v2.3.0#ID3v2_header\n   * ToDo\n   */\n  public static Header = {\n    len: 10,\n\n    get: (buf, off): IID3v2header => {\n      return {\n        // ID3v2/file identifier   \"ID3\"\n        fileIdentifier: new strtok.StringType(3, 'ascii').get(buf, off),\n        // ID3v2 versionIndex\n        version: {\n          major: strtok.INT8.get(buf, off + 3),\n          revision: strtok.INT8.get(buf, off + 4)\n        },\n        // ID3v2 flags\n        flags: {\n          // Raw flags value\n          raw: strtok.INT8.get(buf, off + 4),\n          // Unsynchronisation\n          unsynchronisation: common.strtokBITSET.get(buf, off + 5, 7),\n          // Extended header\n          isExtendedHeader: common.strtokBITSET.get(buf, off + 5, 6),\n          // Experimental indicator\n          expIndicator: common.strtokBITSET.get(buf, off + 5, 5),\n          footer: common.strtokBITSET.get(buf, off + 5, 4)\n        },\n        size: ID3v2.UINT32SYNCSAFE.get(buf, off + 6)\n      };\n    }\n  };\n\n  public static ExtendedHeader = {\n    len: 10,\n\n    get: (buf, off): IExtendedHeader => {\n      return {\n        // Extended header size\n        size: strtok.UINT32_BE.get(buf, off),\n        // Extended Flags\n        extendedFlags: strtok.UINT16_BE.get(buf, off + 4),\n        // Size of padding\n        sizeOfPadding: strtok.UINT32_BE.get(buf, off + 6),\n        // CRC data present\n        crcDataPresent: common.strtokBITSET.get(buf, off + 4, 31)\n      };\n    }\n  };\n}\n\nclass Id3v2Parser implements IStreamParser {\n\n  public static getInstance(): Id3v2Parser {\n    return new Id3v2Parser();\n  }\n\n  private static readFrameHeader(v, majorVer): IFrameHeader {\n    let header: IFrameHeader;\n    switch (majorVer) {\n\n      case 2:\n        header = {\n          id: v.toString('ascii', 0, 3),\n          length: common.strtokUINT24_BE.get(v, 3)\n        };\n        break;\n\n      case 3:\n        header = {\n          id: v.toString('ascii', 0, 4),\n          length: strtok.UINT32_BE.get(v, 4),\n          flags: Id3v2Parser.readFrameFlags(v.slice(8, 10))\n        };\n        break;\n\n      case 4:\n        header = {\n          id: v.toString('ascii', 0, 4),\n          length: ID3v2.UINT32SYNCSAFE.get(v, 4),\n          flags: Id3v2Parser.readFrameFlags(v.slice(8, 10))\n        };\n        break;\n\n      default:\n        throw new Error('Unexpected majorVer: ' + majorVer);\n    }\n    return header;\n  }\n\n  private static getFrameHeaderLength(majorVer, done): number {\n    switch (majorVer) {\n      case 2:\n        return 6;\n      case 3:\n      case 4:\n        return 10;\n      default:\n        return done(new Error('header versionIndex is incorrect'));\n    }\n  }\n\n  private static readFrameFlags(b: Buffer): IFrameFlags {\n    return {\n      status: {\n        tag_alter_preservation: common.strtokBITSET.get(b, 0, 6),\n        file_alter_preservation: common.strtokBITSET.get(b, 0, 5),\n        read_only: common.strtokBITSET.get(b, 0, 4)\n      },\n      format: {\n        grouping_identity: common.strtokBITSET.get(b, 1, 7),\n        compression: common.strtokBITSET.get(b, 1, 3),\n        encryption: common.strtokBITSET.get(b, 1, 2),\n        unsynchronisation: common.strtokBITSET.get(b, 1, 1),\n        data_length_indicator: common.strtokBITSET.get(b, 1, 0)\n      }\n    };\n  }\n\n  private state: State = State.header;\n  private mpegParser: MpegParser;\n\n  public parse(stream, callback, done, readDuration, fileSize) {\n    const self: Id3v2Parser = this;\n\n    let id3Header: IID3v2header;\n    let extendedHeader: IExtendedHeader;\n    let headerType: HeaderType;\n\n    strtok.parse(stream, (v, cb) => {\n      if (v === undefined) {\n        self.state = State.header;\n        return ID3v2.Header;\n      }\n\n      switch (self.state) {\n        case State.header: // ID3v2 header\n          id3Header = v as IID3v2header;\n          if (id3Header.fileIdentifier !== 'ID3') {\n            return done(new Error('expected file identifier \\'ID3\\' not found'));\n          }\n          headerType = ('id3v2.' + id3Header.version.major) as HeaderType;\n          if (id3Header.flags.isExtendedHeader) {\n            self.state = State.extendedHeader;\n            return ID3v2.ExtendedHeader;\n          } else {\n            self.state = State.id3_data;\n            return new strtok.BufferType(id3Header.size);\n          }\n\n        case State.extendedHeader:\n          extendedHeader = v as IExtendedHeader;\n          const dataRemaining = extendedHeader.size - ID3v2.ExtendedHeader.len;\n          if (dataRemaining > 0) {\n            self.state = State.extendedHeaderData;\n            return new strtok.BufferType(dataRemaining);\n          } else {\n            self.state = State.id3_data;\n            return new strtok.BufferType(id3Header.size - extendedHeader.size);\n          }\n\n        case State.extendedHeaderData:\n          self.state = State.id3_data;\n          return new strtok.BufferType(id3Header.size - extendedHeader.size);\n\n        case State.id3_data: // mm data\n          for (const tag of this.parseMetadata(v, id3Header, done)){\n          if (tag.id === 'TXXX') {\n            for (const text of tag.value.text) {\n              callback(headerType, tag.id + ':' + tag.value.description, text);\n            }\n          } else if (isArray(tag.value)) {\n              for (const value of tag.value) {\n                callback(headerType, tag.id, value);\n              }\n            } else {\n              callback(headerType, tag.id, tag.value);\n            }\n          }\n          callback('format', 'headerType', headerType);\n          this.mpegParser = new MpegParser(id3Header.size);\n          this.mpegParser.parse(stream, callback, done, readDuration, fileSize);\n          return strtok.DONE;\n\n        default:\n          done(new Error('Undefined state: ' + self.state));\n      }\n    });\n  }\n\n  public end(callback, done) {\n    this.mpegParser.end(callback, done);\n  }\n\n  private parseMetadata(data: Buffer, header: IID3v2header, done): Array<{id: string, value: any}> {\n    let offset = 0;\n    const tags: Array<{id: string, value: any}> = [];\n\n    while (true) {\n      if (offset === data.length) break;\n      const frameHeaderBytes = data.slice(offset, offset += Id3v2Parser.getFrameHeaderLength(header.version.major, done));\n      const frameHeader = Id3v2Parser.readFrameHeader(frameHeaderBytes, header.version.major);\n\n      // Last frame. Check first char is a letter, bit of defensive programming\n      if (frameHeader.id === '' || frameHeader.id === '\\u0000\\u0000\\u0000\\u0000' ||\n        'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.indexOf(frameHeader.id[0]) === -1) {\n        // ToDo: generate warning\n        break;\n      }\n\n      const frameDataBytes = data.slice(offset, offset += frameHeader.length);\n      const values = this.readFrameData(frameDataBytes, frameHeader, header.version.major);\n      tags.push({id: frameHeader.id, value: values});\n    }\n    return tags;\n  }\n\n  private readFrameData(v, frameHeader, majorVer) {\n    switch (majorVer) {\n      case 2:\n        return id3v2_frames.readData(v, frameHeader.id, null, majorVer);\n      case 3:\n      case 4:\n        if (frameHeader.flags.format.unsynchronisation) {\n          v = common.removeUnsyncBytes(v);\n        }\n        if (frameHeader.flags.format.data_length_indicator) {\n          v = v.slice(4, v.length);\n        }\n        return id3v2_frames.readData(v, frameHeader.id, frameHeader.flags, majorVer);\n      default:\n        throw new Error('Unexpected majorVer: ' + majorVer);\n    }\n  }\n}\n\nmodule.exports = Id3v2Parser.getInstance();\n"]}