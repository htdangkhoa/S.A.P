{"version":3,"file":"id4.js","sourceRoot":"","sources":["../../src/id4.ts"],"names":[],"mappings":"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","sourcesContent":["import * as strtok from 'strtok2';\r\nimport common from './common';\r\nimport {IStreamParser, TagCallback} from './parser';\r\n\r\nenum State {\r\n  skip = -1,\r\n  atomLength = 0,\r\n  atomName = 1,\r\n  ilstAtom = 2,\r\n  mdhdAtom = 3\r\n}\r\n\r\nclass Id4Parser implements IStreamParser {\r\n\r\n  public static type = 'm4a';\r\n\r\n  public static getInstance(): Id4Parser {\r\n    return new Id4Parser();\r\n  }\r\n\r\n  private static Types: { [index: number]: string } = {\r\n    0: 'uint8',\r\n    1: 'text',\r\n    13: 'jpeg',\r\n    14: 'png',\r\n    21: 'uint8'\r\n  };\r\n\r\n  private static ContainerAtoms = ['moov', 'udta', 'meta', 'ilst', 'trak', 'mdia'];\r\n\r\n  public parse(stream, callback: TagCallback, done?, readDuration?, fileSize?) {\r\n    strtok.parse(stream, (v, cb) => {\r\n      // the very first thing we expect to see is the first atom's length\r\n      if (!v) {\r\n        cb.metaAtomsTotalLength = 0;\r\n        cb.state = 0;\r\n        return strtok.UINT32_BE;\r\n      }\r\n\r\n      switch (cb.state) {\r\n        case State.skip: // skip\r\n          cb.state = State.atomLength;\r\n          return strtok.UINT32_BE;\r\n\r\n        case State.atomLength: // atom length\r\n          cb.atomLength = v;\r\n          cb.state++;\r\n          return new strtok.BufferType(4);\r\n\r\n        case State.atomName: // atom name\r\n          v = v.toString('binary');\r\n          cb.atomName = v;\r\n\r\n          // meta has 4 bytes padding at the start (skip)\r\n          if (v === 'meta') {\r\n            cb.state = State.skip;\r\n            return new strtok.IgnoreType(4);\r\n          }\r\n\r\n          if (readDuration) {\r\n            if (v === 'mdhd') {\r\n              cb.state = State.mdhdAtom;\r\n              return new strtok.BufferType(cb.atomLength - 8);\r\n            }\r\n          }\r\n\r\n          if (!~Id4Parser.ContainerAtoms.indexOf(v)) {\r\n            if (cb.atomContainer === 'ilst') {\r\n              cb.state = State.ilstAtom;\r\n              return new strtok.BufferType(cb.atomLength - 8);\r\n            }\r\n            cb.state = State.skip;\r\n            return new strtok.IgnoreType(cb.atomLength - 8);\r\n          }\r\n\r\n          // dig into container atoms\r\n          cb.atomContainer = v;\r\n          cb.atomContainerLength = cb.atomLength;\r\n          cb.state--;\r\n          return strtok.UINT32_BE;\r\n\r\n        case State.ilstAtom: // ilst atom\r\n          cb.metaAtomsTotalLength += cb.atomLength;\r\n          let results = this.processMetaAtom(v, cb.atomName, cb.atomLength - 8);\r\n          if (results.length > 0) {\r\n            for (let result of results) {\r\n              callback(Id4Parser.type, cb.atomName, result);\r\n            }\r\n          }\r\n\r\n          // we can stop processing atoms once we get to the end of the ilst atom\r\n          if (cb.metaAtomsTotalLength >= cb.atomContainerLength - 8) {\r\n            return done();\r\n          }\r\n\r\n          cb.state = State.atomLength;\r\n          return strtok.UINT32_BE;\r\n\r\n        case State.mdhdAtom: // mdhd atom\r\n          // TODO: support version 1\r\n          let sampleRate = v.readUInt32BE(12);\r\n          let duration = v.readUInt32BE(16);\r\n          callback('format', 'duration', duration / sampleRate);\r\n          callback('format', 'sampleRate', sampleRate); // ToDo: add to test\r\n          cb.state = State.atomLength;\r\n          return strtok.UINT32_BE;\r\n\r\n        default:\r\n          return done(new Error('illegal state:' + cb.state));\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  private processMetaAtom(data, atomName: string, atomLength: number) {\r\n    let result = [];\r\n    let offset = 0;\r\n\r\n    // ignore proprietary iTunes atoms (for now)\r\n    if (atomName === '----') return result;\r\n\r\n    while (offset < atomLength) {\r\n      let length = strtok.UINT32_BE.get(data, offset);\r\n      let contType = Id4Parser.Types[strtok.UINT32_BE.get(data, offset + 8)];\r\n\r\n      let content = this.processMetaDataAtom(data.slice(offset + 12, offset + length), contType, atomName);\r\n\r\n      result.push(content);\r\n      offset += length;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  private processMetaDataAtom(data, type, atomName) {\r\n    switch (type) {\r\n      case 'text':\r\n        return data.toString('utf8', 4);\r\n\r\n      case 'uint8':\r\n        if (atomName === 'gnre') {\r\n          let genreInt = strtok.UINT8.get(data, 5);\r\n          return common.GENRES[genreInt - 1];\r\n        }\r\n        if (atomName === 'trkn' || atomName === 'disk') {\r\n          return data[7] + '/' + data[9];\r\n        }\r\n\r\n        return strtok.UINT8.get(data, 4);\r\n\r\n      case 'jpeg':\r\n      case 'png':\r\n        return {\r\n          format: 'image/' + type,\r\n          data: new Buffer(data.slice(4))\r\n        };\r\n\r\n      default:\r\n        throw new Error('Unexpected type: ' + type);\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = Id4Parser.getInstance();\r\n"]}