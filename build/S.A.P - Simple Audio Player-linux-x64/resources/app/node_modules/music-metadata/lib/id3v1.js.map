{"version":3,"file":"id3v1.js","sourceRoot":"","sources":["../src/id3v1.ts"],"names":[],"mappings":"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","sourcesContent":["'use strict';\nimport * as strtok from 'strtok2';\nimport common from './common';\nimport {MpegParser} from './mpeg';\nimport {Done, IStreamParser, TagCallback} from './parser';\n\nclass Id3v1Parser implements IStreamParser {\n\n  public static getInstance(): Id3v1Parser {\n    return new Id3v1Parser();\n  }\n\n  private static parseTag(buf: Buffer, offset: number, end: number, type, tag, callback: TagCallback): void {\n    let value = buf.toString('ascii', offset, end);\n    value = value.trim().replace(/\\x00/g, '');\n    if ( value.length > 0) {\n      callback(type, tag, value);\n    }\n  }\n\n  private endData: Buffer;\n  private type = 'id3v1.1';\n  private mpegParser: MpegParser;\n\n  public parse(stream, callback: TagCallback, done, readDuration?, fileSize?) {\n\n    let mp3Done = false;\n    const id3Done = false;\n\n    stream.on('data', (data) => {\n      this.endData = data;\n    });\n\n    this.mpegParser = new MpegParser(128);\n    this.mpegParser.parse(stream, callback, (err) => {\n        mp3Done = true;\n        if (id3Done) {\n          return done(err);\n        } else return strtok.DONE;\n      }, readDuration, fileSize);\n  }\n\n  public end(callback: TagCallback, done: Done) {\n\n    let offset = this.endData.length - 128;\n    const header = this.endData.toString('ascii', offset, offset += 3);\n    if (header !== 'TAG') {\n      return done(new Error('Could not find metadata header'));\n    }\n\n    callback('format', 'headerType', this.type);\n\n    Id3v1Parser.parseTag(this.endData, offset, offset += 30, this.type, 'title', callback);\n    Id3v1Parser.parseTag(this.endData, offset, offset += 30, this.type, 'artist', callback);\n    Id3v1Parser.parseTag(this.endData, offset, offset += 30, this.type, 'album', callback);\n    Id3v1Parser.parseTag(this.endData, offset, offset += 4, this.type, 'year', callback);\n    Id3v1Parser.parseTag(this.endData, offset, offset += 28, this.type, 'comment', callback);\n\n    const track = this.endData[this.endData.length - 2];\n    callback(this.type, 'track', track);\n\n    if (this.endData[this.endData.length - 1] in common.GENRES) {\n      const genre = common.GENRES[this.endData[this.endData.length - 1]];\n      callback(this.type, 'genre', genre);\n    }\n\n    if (this.mpegParser) {\n      this.mpegParser.end(callback, done);\n    }\n  }\n}\n\nmodule.exports = Id3v1Parser.getInstance();\n"]}