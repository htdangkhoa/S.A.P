{"version":3,"file":"id3v2_frames.js","sourceRoot":"","sources":["../src/id3v2_frames.ts"],"names":[],"mappings":"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","sourcesContent":["import * as strtok from 'strtok2';\nimport common from './common';\nimport vorbis from './vorbis';\n\ninterface IOut {\n  language?: string,\n  description?: string,\n  text?: string,\n}\n\ninterface IPicture {\n  type?: string,\n  description?: string;\n  format?: string,\n  data?: Uint8Array;\n}\n\n/**\n * Used for the 'Musician credits list' (TMCL) result.\n * Mapping between instruments and the musician that played it\n */\ninterface IMusicianCredit {\n  instrument: string,\n  name: string;\n}\n\n/**\n * Used for the 'Musician credits list' (TMCL) result.\n * Mapping between instruments and the musician that played it\n */\ninterface IInvolvedPerson {\n  'function': string,\n  name: string;\n}\n\nexport default class FrameParser {\n\n  public static readData(b: Buffer, type: string, flags, major: number) {\n    const encoding = FrameParser.getTextEncoding(b[0]);\n    const length = b.length;\n    let offset = 0;\n    let output: any = []; // ToDo\n    const nullTerminatorLength = FrameParser.getNullTerminatorLength(encoding);\n    let fzero: number;\n    const out: IOut = {};\n\n    switch (type !== 'TXXX' && type[0] === 'T' ? 'T*' : type) {\n      case 'T*': // 4.2.1. Text information frames - details\n      case 'IPLS': // v2.3: Involved people list\n        const text = common.decodeString(b.slice(1), encoding).replace(/\\x00+$/, '');\n        // id3v2.4 defines that multiple T* values are separated by 0x00\n        // id3v2.3 defines that multiple T* values are separated by /\n        switch (type) {\n          case 'TMCL': // Musician credits list\n          case 'TIPL': // Involved people list\n          case 'IPLS': // Involved people list\n            output = FrameParser.splitValue(4, text);\n            output = FrameParser.functionList(output);\n            break;\n          case 'TRK':\n          case 'TRCK':\n          case 'TPOS':\n            output = text;\n            break;\n          default:\n            output = FrameParser.splitValue(major, text);\n        }\n        break;\n\n      case 'TXXX':\n        output = FrameParser.readIdentifierAndData(b, offset + 1, length, encoding);\n        output = {\n          description: output.id,\n          text: FrameParser.splitValue(major, common.decodeString(output.data, encoding).replace(/\\x00+$/, ''))\n        };\n        break;\n\n      case 'PIC':\n      case 'APIC':\n        const pic: IPicture = {};\n\n        offset += 1;\n\n        switch (major) {\n          case 2:\n            pic.format = common.decodeString(b.slice(offset, offset + 3), encoding);\n            offset += 3;\n            break;\n          case 3:\n          case 4:\n            const enc = 'iso-8859-1';\n            fzero = common.findZero(b, offset, length, enc);\n            pic.format = common.decodeString(b.slice(offset, fzero), enc);\n            offset = fzero + 1;\n            break;\n\n          default:\n            throw new Error('Warning: unexpected major versionIndex: ' + major);\n        }\n\n        pic.type = vorbis.getPictureType(b[offset]);\n        offset += 1;\n\n        fzero = common.findZero(b, offset, length, encoding);\n        pic.description = common.decodeString(b.slice(offset, fzero), encoding);\n        offset = fzero + nullTerminatorLength;\n\n        pic.data = new Buffer(b.slice(offset, length));\n        output = pic;\n        break;\n\n      case 'CNT':\n      case 'PCNT':\n        output = strtok.UINT32_BE.get(b, 0);\n        break;\n\n      case 'SYLT':\n        // skip text encoding (1 byte),\n        //      language (3 bytes),\n        //      time stamp format (1 byte),\n        //      content headerType (1 byte),\n        //      content descriptor (1 byte)\n        offset += 7;\n\n        output = [];\n        while (offset < length) {\n          const txt = b.slice(offset, offset = common.findZero(b, offset, length, encoding));\n          offset += 5; // push offset forward one +  4 byte timestamp\n          output.push(common.decodeString(txt, encoding));\n        }\n        break;\n\n      case 'ULT':\n      case 'USLT':\n      case 'COM':\n      case 'COMM':\n\n        offset += 1;\n\n        out.language = common.decodeString(b.slice(offset, offset + 3), 'iso-8859-1');\n        offset += 3;\n\n        fzero = common.findZero(b, offset, length, encoding);\n        out.description = common.decodeString(b.slice(offset, fzero), encoding);\n        offset = fzero + nullTerminatorLength;\n\n        out.text = common.decodeString(b.slice(offset, length), encoding).replace(/\\x00+$/, '');\n\n        output = [out];\n        break;\n\n      case 'UFID':\n        output = FrameParser.readIdentifierAndData(b, offset, length, 'iso-8859-1');\n        output = {owner_identifier: output.id, identifier: output.data};\n\n        break;\n\n      case 'PRIV': // private frame\n        output = FrameParser.readIdentifierAndData(b, offset, length, 'iso-8859-1');\n        output = {owner_identifier: output.id, data: output.data};\n        break;\n\n      default:\n        // ToDO? console.log('Warning: unsupported id3v2-tag-type: ' + type)\n        break;\n    }\n\n    return output;\n  }\n\n  /**\n   * Converts TMCL (Musician credits list) or TIPL (Involved people list)\n   * @param entries\n   */\n  private static functionList(entries: string[]): {[index: string]: string[]} {\n    const res: {[index: string]: string[]} = {};\n    for (let i = 0; i + 1 < entries.length; i += 2) {\n      const names: string[] = entries[i + 1].split(',');\n      res[entries[i]] = res.hasOwnProperty(entries[i]) ? res[entries[i]].concat(names) : names;\n    }\n    return res;\n  }\n\n  private static splitValue(major: number, text: string) {\n    const values = text.split(major >= 4 ? /\\x00/g : /\\//g);\n    return FrameParser.trimArray(values);\n  }\n\n  private static trimArray(values: string[]): string[] {\n    for (let i = 0; i < values.length; ++i) {\n      values[i] = values[i].replace(/\\x00+$/, '').trim();\n    }\n    return values;\n  }\n\n  private static readIdentifierAndData(b, offset, length, encoding): {id: string, data: Uint8Array} {\n    const fzero = common.findZero(b, offset, length, encoding);\n\n    const id = common.decodeString(b.slice(offset, fzero), encoding);\n    offset = fzero + FrameParser.getNullTerminatorLength(encoding);\n\n    return {id, data: b.slice(offset, length)};\n  }\n\n  private static getTextEncoding(byte): string {\n    switch (byte) {\n      case 0x00:\n        return 'iso-8859-1'; // binary\n      case 0x01:\n      case 0x02:\n        return 'utf16'; // 01 = with bom, 02 = without bom\n      case 0x03:\n        return 'utf8';\n      default:\n        return 'utf8';\n    }\n  }\n\n  private static getNullTerminatorLength(enc) {\n    switch (enc) {\n      case 'utf16':\n        return 2;\n      default:\n        return 1;\n    }\n  }\n\n}\n\n// exports.readData = function readData (b, type, flags, major) {\n"]}